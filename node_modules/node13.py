#%%[markdown]
# 
# Name:Kismat Khatri
# 
# You may use web search, notes, etc. 
# Do not use help from another human. If you use help from another student, 
# then I have no choice but to consider that student not a human, and will be 
# booted off my class immediately. You will also arrive at the same fate.
#
# I have a dataframe with video games data from an online site.
# Complete the tasks below without importing any libraries except pandas and numpy.
# After we load the csv file as a dataframe, write codes to complete the three tasks. 
# 
# 

#%%
import os
import rfit
import pandas as pd
# vgames = rfit.dfapi('VideoGames')
# vgames.to_csv('videogames.csv')
# if needed to reload, use the local version instead of hitting the server
vgames = pd.read_csv('videogames.csv')
print(f"vgames.shape = {vgames.shape}")
print(f"vgames.info() = {vgames.info()}")
print(f"vgames.head() = {vgames.head()}")


#%%
# Task 1
# (i) Create two boolean arrays out of the vgames df using numpy broadcasting. 
# One boolean array for the Year of Release 2006 or earlier (call that boolean array arrBooleanOldGames), 
# and the other boolean array after 2006 (call that boolean array arrBooleanNewGames), 
# (ii) Then use these two boolean arrays to filter out the Old and New game entries. 
# You should result in two dataframes (subsets), call them 
# vOldGames and vNewGames respectively. 
# (iii) What are the shapes of the two resulting dataframes?
#

import numpy as np
arrBooleanOldGames = np.array(vgames.Year_of_Release<=2006)
arrBooleanNewGames = np.array(vgames.Year_of_Release>2006)

vOldGames = vgames[arrBooleanOldGames]
vNewGames = vgames[arrBooleanNewGames]

print(f"Old Games Dataframe shape: {vOldGames.shape}")
print(f"New Games Dataframe shape: {vNewGames.shape}")






#%%
# Task 2 
# (i) From the vOldGames and vNewGames dataframes, find 
# out all the different average/mean of sales figures (North America, EU, Japan, etc).
# (ii) Comment on the sales figures. Is it incresing/decreading? In what region?

print(vOldGames['NA_Sales'].mean())
print(vOldGames['EU_Sales'].mean())
print(vOldGames['JP_Sales'].mean())



print(vNewGames['JP_Sales'].mean())
print(vNewGames['EU_Sales'].mean())
print(vNewGames['NA_Sales'].mean())

# it show decreasing with voldgames and vnewgames.

#%%
arrBooleanShooter = vgames['Genre'] == "Shooter"
arrBooleanShooter = arrBooleanShooter.to_numpy()
print(arrBooleanShooter)
# (ii) By taking the intersect of arrBooleanOldGames and arrBooleanShooter, obtain
# a new boolean array (call it arrBooleanOldShooter) to help filter out those that are Old Shooter games.
# Similarly, take the intersect of arrBooleanNewGames and arrBooleanShooter, obtain
# a new boolean array (call it arrBooleanNewShooter) to help filtering.
arrBooleanOldShooter = np.logical_and(arrBooleanOldGames, arrBooleanShooter)
arrBooleanNewShooter = np.logical_and(arrBooleanNewGames, arrBooleanShooter)

vOldShooter = vgames[arrBooleanOldShooter]
vNewShooter = vgames[arrBooleanNewShooter]
print(vOldShooter.head())
print(vNewShooter.head())
# (iii) How many vOldShooter games and vNewShooter games in the dataset?
print("The number of vOldshooter games is {}".format(len(vOldShooter)))
print("The number of vNewshooter game is {}".format(len(vNewShooter)))
# (iv) With the "Shooter" games alone, look at the sales figures like we did in
# Task 2, and comment on it.
sales_for_shooter = vgames["Genre"] == "Shooter"
vgames_df_shooter = vgames[sales_for_shooter]

print("Sales of shooter games in NA region {}".format(
    vOldGames['NA_Sales'].mean()))
print("Sales of shooter games in EU region {}".format(
    vOldGames['EU_Sales'].mean()))
print("Sales of shooter games in NA region {}".format(
    vOldGames['JP_Sales'].mean()))


# %%
